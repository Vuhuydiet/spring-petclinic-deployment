# Discovery Server (Eureka) deployment - must be deployed second
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.discoveryServer.name }}
  labels:
    app: {{ .Values.discoveryServer.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.discoveryServer.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.discoveryServer.name }}
    spec:
      initContainers:
      - name: wait-for-config-server
        image: busybox
        command:
        - sh
        - -c 
        - until nc -z {{ .Values.configServer.name }} {{ .Values.configServer.port }}; do echo waiting for config-server; sleep 2; done;

      containers:
      - name: {{ .Values.discoveryServer.name }}
        image: "{{ .Values.discoveryServer.image.name }}:{{ .Values.discoveryServer.image.tag }}"
        ports:
        - containerPort: 8761
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: CONFIG_SERVER_URL
          value: "http://{{ .Values.configServer.name }}:{{ .Values.configServer.port }}"
        # Observability configuration
        - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
          value: "health,info,prometheus,metrics"
        - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
          value: "always"
        - name: MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED
          value: "true"
        - name: MANAGEMENT_TRACING_SAMPLING_PROBABILITY
          value: "1.0"
        - name: MANAGEMENT_ZIPKIN_TRACING_ENDPOINT
          value: "http://{{ .Values.observability.zipkin.name }}:{{ .Values.observability.zipkin.port }}/api/v2/spans"
        - name: LOGGING_PATTERN_CONSOLE
          value: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.discoveryServer.name }}
spec:
  selector:
    app: {{ .Values.discoveryServer.name }}
  ports:
  - protocol: TCP
    port: {{ .Values.discoveryServer.port }}
    targetPort: {{ .Values.discoveryServer.targetPort }}
  type: {{ .Values.discoveryServer.serviceType}}