apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.observability.loki.name }}-config
data:
  local-config.yaml: |
    auth_enabled: false
    
    server:
      http_listen_port: 3100
      grpc_listen_port: 9096
    
    common:
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory
    
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    
    ruler:
      alertmanager_url: http://localhost:9093
    
    analytics:
      reporting_enabled: false
    
    # Query frontend configuration for better performance
    frontend:
      max_outstanding_per_tenant: 256
      compress_responses: true
      log_queries_longer_than: 5s
    
    # Querier configuration for JSON log parsing
    querier:
      max_concurrent: 20
      query_timeout: 1m
      
    # Ingester configuration for better log handling
    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 5m
      chunk_retain_period: 30s
      max_transfer_retries: 0
    
    # Limits configuration for better performance
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_query_length: 12000h
      max_query_parallelism: 32
      max_streams_per_user: 10000
      max_line_size: 512000
      ingestion_rate_mb: 8
      ingestion_burst_size_mb: 16
      per_stream_rate_limit: 5MB
      per_stream_rate_limit_burst: 20MB
      max_cache_freshness_per_query: 10m
      split_queries_by_interval: 15m
      max_entries_limit_per_query: 5000
      
    # Log parsing and processing rules
    chunk_store_config:
      max_look_back_period: 0s
      
    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s
      
    query_range:
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 100

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.observability.loki.name }}
spec:
  replicas: 1
  strategy:
    type: Recreate  # Ensures old pod is terminated before new one starts
  selector:
    matchLabels:
      app: {{ .Values.observability.loki.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.observability.loki.name }}
    spec:
      {{- if .Values.observability.tolerateMemoryPressure }}
      tolerations:
      - key: node.kubernetes.io/memory-pressure
        operator: Exists
        effect: NoSchedule
      {{- end }}
      securityContext:
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
      containers:
      - name: {{ .Values.observability.loki.name }}
        image: "{{ .Values.observability.loki.image.name }}:{{ .Values.observability.loki.image.tag }}"
        ports:
        - containerPort: {{ .Values.observability.loki.targetPort }}
        args:
          - -config.file=/etc/loki/local-config.yaml
        volumeMounts:
        - name: loki-config
          mountPath: /etc/loki
        - name: loki-storage
          mountPath: /loki
        livenessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.observability.loki.targetPort }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.observability.loki.targetPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: loki-config
        configMap:
          name: {{ .Values.observability.loki.name }}-config
      - name: loki-storage
        {{- if .Values.observability.useEmptyDirVolumes }}
        emptyDir: {}
        {{- else }}
        persistentVolumeClaim:
          claimName: {{ .Values.observability.loki.name }}-pvc
        {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.observability.loki.name }}
spec:
  selector:
    app: {{ .Values.observability.loki.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.observability.loki.port }}
      targetPort: {{ .Values.observability.loki.targetPort }}
  type: {{ .Values.observability.loki.serviceType }}

{{- if not .Values.observability.useEmptyDirVolumes }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.observability.loki.name }}-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: do-block-storage
  resources:
    requests:
      storage: {{ .Values.observability.loki.storage | default "5Gi" }}
{{- end }}